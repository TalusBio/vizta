{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started","text":"In\u00a0[1]: Copied! <pre>import numpy as np\nimport matplotlib.pyplot as plt\n\n\ndef make_plot():\n    \"\"\"Create a plot with random data\"\"\"\n    rng = np.random.default_rng(42)  # To generate random number\n    plt.figure()\n\n    xdata = np.arange(100) / 100\n    plt.plot(xdata, xdata + rng.random(100), label=\"Series 1\")\n    plt.plot(xdata, xdata + rng.random(100) + 0.5, label=\"Series 2\")\n    plt.legend()\n    plt.xlabel(\"My x-axis label\")\n    plt.ylabel(\"My y-axis label\")\n    plt.tight_layout()\n    plt.show()\n\n\nmake_plot()\n</pre> import numpy as np import matplotlib.pyplot as plt   def make_plot():     \"\"\"Create a plot with random data\"\"\"     rng = np.random.default_rng(42)  # To generate random number     plt.figure()      xdata = np.arange(100) / 100     plt.plot(xdata, xdata + rng.random(100), label=\"Series 1\")     plt.plot(xdata, xdata + rng.random(100) + 0.5, label=\"Series 2\")     plt.legend()     plt.xlabel(\"My x-axis label\")     plt.ylabel(\"My y-axis label\")     plt.tight_layout()     plt.show()   make_plot() <p>Now we can easily change such a plot to be Talus Bio themed:</p> In\u00a0[2]: Copied! <pre>import vizta  # First import vizta\n\nvizta.mpl.set_theme()  # Set the theme\nmake_plot()  # Then make the plot again\n</pre> import vizta  # First import vizta  vizta.mpl.set_theme()  # Set the theme make_plot()  # Then make the plot again <p>We can also change the plotting context for different types of presentations. This adjusts the font sizes and line thickness to be appropriate for the venue. See the seaborn documentation for more details.</p> In\u00a0[3]: Copied! <pre>vizta.mpl.set_theme(context=\"talk\")  # Set the theme for a talk\nmake_plot()  # Then make the plot again\n</pre> vizta.mpl.set_theme(context=\"talk\")  # Set the theme for a talk make_plot()  # Then make the plot again In\u00a0[4]: Copied! <pre>import seaborn as sns\nimport vizta\n\nsns.color_palette(\"talusbio\")\n</pre> import seaborn as sns import vizta  sns.color_palette(\"talusbio\") Out[4]: In\u00a0[5]: Copied! <pre>import vizta\n\nvizta.mpl.set_theme()\n\n# Create a figure that is 6 in wide and 3 in tall, with 2 panels:\nfig, axs = plt.subplots(1, 2, figsize=(6, 3))\nplt.tight_layout()\naxs[0].text(0.5, 0.5, \"Left\", ha=\"center\")\naxs[1].text(0.5, 0.5, \"Right\", ha=\"center\")\nplt.show()\n</pre> import vizta  vizta.mpl.set_theme()  # Create a figure that is 6 in wide and 3 in tall, with 2 panels: fig, axs = plt.subplots(1, 2, figsize=(6, 3)) plt.tight_layout() axs[0].text(0.5, 0.5, \"Left\", ha=\"center\") axs[1].text(0.5, 0.5, \"Right\", ha=\"center\") plt.show() <ul> <li>Bump up the resolution using the <code>dpi</code> argument:</li> </ul> In\u00a0[6]: Copied! <pre>plt.savefig(\"my-figure.png\", dpi=72)  # Good for web\nplt.savefig(\"my-figure.png\", dpi=300)  # Good for print\n</pre> plt.savefig(\"my-figure.png\", dpi=72)  # Good for web plt.savefig(\"my-figure.png\", dpi=300)  # Good for print <pre>&lt;Figure size 640x480 with 0 Axes&gt;</pre> <p>That's it. Have an issue? File it here: https://github.com/TalusBio/vizta/issues</p>"},{"location":"#getting-started","title":"Getting Started\u00b6","text":"<p>The vizta package makes it easy to use a consistent theme in our data visualizations. Additionally, it saves us time that would have been spent tweaking themes manually. Currently, vizta only supports matplotlib.</p>"},{"location":"#installation","title":"Installation\u00b6","text":"<p>vizta is easily installed with pip:</p> <pre><code>pip install vizta\n</code></pre> <p>Alternatively, the development version can be installed with pip:</p> <pre><code>pip install git+https://github.com/TalusBio/vizta.git\n</code></pre> <p>You will also need to install any fonts used by your theme. For the <code>talusbio</code> theme, this is \"Host Grotesk\", which on a Mac can easily be installed with Homebrew:</p> <pre><code>brew install --cask font-host-grotesk\n</code></pre>"},{"location":"#usage","title":"Usage\u00b6","text":""},{"location":"#theme-your-matplotlib-plots-for-talus-bio","title":"Theme your matplotlib plots for Talus Bio\u00b6","text":"<p>Vizta let's us easily set our theme using <code>vizta.mpl.set_theme()</code>, which behaves similarly to <code>seaborn.set_theme()</code>.</p> <p>First, we'll create a plot with some random data without a theme:</p>"},{"location":"#retrieve-the-colors-in-the-color-palette","title":"Retrieve the colors in the color palette\u00b6","text":"<p>When vizta is imported, it adds our color palettes to those provided by seaborn. To retrieve the Talus Bio color palette, use <code>seaborn.color_palette()</code>. Note that we currently only use 4 colors, although I would advise sticking with only 2.</p>"},{"location":"#tips-for-publication-ready-figures","title":"Tips for Publication-Ready Figures\u00b6","text":"<ul> <li><p>Read \"Fundamentals of Data Visualization\" by Claus Wilke. It is available for free online and offers sound advice for creating clear and appealing data viasualizations.</p> </li> <li><p>Create figures that are exactly the size that you want in your slide, poster, or paper. With matplotlib, you can specify the size of your figure in inches using the <code>figsize</code> argument:</p> </li> </ul>"},{"location":"api/","title":"API reference","text":""},{"location":"api/#vizta.mpl.set_theme","title":"<code>vizta.mpl.set_theme(context='notebook', style='talusbio', font_scale=1)</code>","text":"<p>Get the parameters that control the general style of the plots.</p> <p>This function can also be used as a context manager to temporarily alter the global defaults.</p> PARAMETER DESCRIPTION <code>context</code> <p>The scaling parameters. Can be one of <code>paper</code> <code>notebook</code>, <code>talk</code>, or <code>poster</code>. See seaborn.plotting_context.</p> <p> TYPE: <code>str or dict</code> DEFAULT: <code>'notebook'</code> </p> <code>style</code> <p>The name of a preconfigured style. Currently either <code>talusbio</code> or <code>wfondrie</code>.</p> <p> TYPE: <code>str</code> DEFAULT: <code>'talusbio'</code> </p> <code>font_scale</code> <p>Separate scaling factor to independently scale the size of the font elements</p> <p> TYPE: <code>float</code> DEFAULT: <code>1</code> </p> RETURNS DESCRIPTION <code>primary_color</code> <p>The primary color for the plot elements.</p> <p> TYPE: <code>str</code> </p> <code>accent_color</code> <p>The accent color for the plot elements.</p> <p> TYPE: <code>str</code> </p>"}]}